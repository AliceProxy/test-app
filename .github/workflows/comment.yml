name: Post Preview-URL

on: pull_request

jobs:
  quote-job-image:
    name: Build Quote Image
    runs-on: ubuntu-latest
    env:
      DEV_REGISTRY: ${{ secrets.DEV_REGISTRY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
    steps:
      - name: Checkout local
        uses: actions/checkout@v3
        with:
          path: local

      - name: Install Go
        uses: actions/setup-go@v2
        with:
          go-version: "1.17.6"

      - name: "Docker Login"
        uses: docker/login-action@v1
        with:
          username: ${{ env.DOCKER_USERNAME }}
          password: ${{ env.DOCKER_PASSWORD }}

      - name: Build Quote
        env:
          GITHUB_TOKEN: $ {{ secrets.GITHUB_TOKEN }}
        run: |
          
          # Configure this
          image_name=quote-deploy-preview

          # export pull number
          cd local
          export PULL_NUM=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          export COMMIT_HASH=$(git rev-parse --short "$GITHUB_SHA")

          docker build -t $DEV_REGISTRY/$image_name:$PULL_NUM-$COMMIT_HASH .
          docker push $DEV_REGISTRY/$image_name:$PULL_NUM-$COMMIT_HASH

  comment:
    name: Deploy Preview Manifests # Posts a comment on PR open for testing
    runs-on: ubuntu-latest
    needs:
      - quote-job-image
    env:
      DEV_REGISTRY: ${{ secrets.DEV_REGISTRY }}
    steps:
      - name: Checkout local
        uses: actions/checkout@v3
        with:
          path: local

      - name: Checkout remote
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITOPS_TOKEN }}
          repository: AliceProxy/deploy-preview # Configure this
          path: remote

      - name: push manifests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITOPS_TOKEN: ${{ secrets.GITOPS_TOKEN }}
        run: |

          # Configure this
          git_name="Alice Wasko"
          git_email="alicewasko@datawire.io"
          gitops_repo="github.com/AliceProxy/deploy-preview.git"
          # And configure this again since I didnt feel like making it an output
          image_name=quote-deploy-preview

          # export pull number
          cd local
          export PULL_NUM=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          export COMMIT_HASH=$(git rev-parse --short "$GITHUB_SHA")

          # copy the manifest to the remote directory
          cd ../remote
          if [[ ! -d "./manifests/deploy-previews" ]]; then
              mkdir ./manifests/deploy-previews
              if [[ ! -d "./manifests/deploy-previews/quote" ]]; then
                mkdir ./manifests/deploy-previews/quote
              fi
          fi
          cp ./manifests/quote/quote-deploy.yaml ./manifests/deploy-previews/quote/quote-deploy-preview-pr$PULL_NUM.yaml

          manifest=./manifests/deploy-previews/quote/quote-deploy-preview-pr$PULL_NUM.yaml

          name=$(yq '.metadata.name' $manifest)
          namespace=$(yq '.metadata.namespace' $manifest)

          # set/modify the app label and remove all others
          yq -i '.spec.template.metadata.labels.app = '\"${name}'-deploy-preview-pr'${PULL_NUM}\" $manifest
          yq -i '.spec.template.metadata |= .labels |= with_entries(select(.key == "app"))' $manifest

          # Again for the selector
          yq -i '.spec.selector.matchLabels.app = '\"${name}'-deploy-preview-pr'${PULL_NUM}\" $manifest
          yq -i '.spec.selector |= .matchLabels |= with_entries(select(.key == "app"))' $manifest

          # update the image. Right now this edits every container in the deployment. 
          # TODO: edit this to only be for a specific container incase there are multiple containers
          yq -i '.spec.template.spec.containers[] |= .image = '\"${DEV_REGISTRY}/${image_name}:${PULL_NUM}-${COMMIT_HASH}\" $manifest

          yq -i '.metadata.name = '\"${name}'-deploy-preview-pr'${PULL_NUM}\" $manifest
          yq -i '.metadata.namespace = "deploy-previews"' $manifest

          git config --unset-all http.https://github.com/.extraheader # this is required to unset all the config from the current repository (the one running this job)

          git config user.name $git_name
          git config user.email $git_email

          # TODO: If CI fails in the middle of a run or for whatever reason the deployment preview manifest already exists in the remote repo this will fail since there are no differences
          git add $manifest
          git commit -m "create preview deployment" --signoff

          #git push --set-upstream deploy-preview-$PULL_NUM
          git push https://$GITOPS_TOKEN@$gitops_repo

      - name: Comment complete
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.issue.owner,
              repo: context.repo.repo,
              body: 'Your preview manifests have been pushed to the gitops repository.\nPlease wait for Argo to sync the manifests into your cluster.\nTodd is currently not functional so the container will crash. This is expected until we have a working image that generates the previewURL for us.'
            })
