name: Post Preview-URL

on: pull_request

jobs:
  comment:
    name: Deploy Preview Manifests # Posts a comment on PR open for testing
    runs-on: ubuntu-latest
    steps:
      - name: Checkout local
        uses: actions/checkout@v3
        with:
          path: local

      - name: Checkout remote
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITOPS_TOKEN }}
          repository: AliceProxy/deploy-preview
          path: remote

      - name: push manifests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITOPS_TOKEN: ${{ secrets.GITOPS_TOKEN }}
        run: |

          # export pull number
          export PULL_NUM=$(jq --raw-output .pull_request.number "$GITHUB_EVENT_PATH")
          export COMMIT_HASH=$(git rev-parse --short "$GITHUB_SHA")

          # copy the manifest to the remote directory
          cp ./remote/manifests/quote-deploy.yaml ./remote/manifests/quote-deploy-preview-PR$PULL_NUM.yaml
          cd remote

          manifest=./manifests/quote-deploy-preview-PR$PULL_NUM.yaml

          # Begin yaml editing TODO: get the image from CI
          image='docker.io/datawire/deploy-previews:1.0'

          name=$(yq '.metadata.name' $manifest)
          namespace=$(yq '.metadata.namespace' $manifest)

          # set/modify the app label and remove all others
          yq -i '.spec.template.metadata.labels.app = '\"${name}'-deploy-preview-PR'${PULL_NUM}\" $manifest
          yq -i '.spec.template.metadata |= .labels |= with_entries(select(.key == "app"))' $manifest

          # Again for the selector
          yq -i '.spec.selector.matchLabels.app = '\"${name}'-deploy-preview-PR'${PULL_NUM}\" $manifest
          yq -i '.spec.selector |= .matchLabels |= with_entries(select(.key == "app"))' $manifest

          # update the image. Right now this edits every container in the deployment. 
          # TODO: edit this to only be for a specific container incase there are multiple containers
          yq -i '.spec.template.spec.containers[] |= .image = '\"${image}\" $manifest

          yq -i '.metadata.name = '\"${name}'-deploy-preview-PR'${PULL_NUM}\" $manifest
          yq -i '.metadata.namespace = "deploy-previews"' $manifest

          git config --unset-all http.https://github.com/.extraheader # this is required to unset all the config from the current repository (the one running this job)

          git config user.name "AliceProxy"
          git config user.email "alicewasko@datawire.io"

          # TODO: If CI fails in the middle of a run or for whatever reason the deployment preview manifest already exists in the remote repo this will fail since there are no differences
          git add $manifest
          git commit -m "create preview deployment"

          #git push --set-upstream deploy-preview-$PULL_NUM
          git push https://$GITOPS_TOKEN@github.com/AliceProxy/deploy-preview.git

      - name: Comment complete
        uses: actions/github-script@v5
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.issue.owner,
              repo: context.repo.repo,
              body: 'Your preview manifests have been pushed to the gitops repository'
            })
